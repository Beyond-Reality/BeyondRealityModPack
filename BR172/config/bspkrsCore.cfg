# Configuration file

##########################################################################################################
# general
#--------------------------------------------------------------------------------------------------------#
# ATTENTION: Editing this file manually is no longer necessary. 
# On the Mods list screen select the entry for bspkrsCore, then click the Config button to modify these settings.
##########################################################################################################

general {
    # Set to true to allow checking for updates for ALL of my mods, false to disable. [default: true]
    B:allowUpdateCheck=false

    # The timeout in milliseconds for the version update check. [range: 100 ~ 30000, default: 3000]
    I:updateTimeoutMilliseconds=3000

    #  [default: false]
    B:allowDebugOutput=false

    # When true a file called UniqueNames.txt will be generated in the config folder for convenience. The names found in the file are the string representation of blocks and items in Minecraft. Mods such as Treecapitator and StartingInventory use them in their config files since IDs are gone. [default: true]
    B:generateUniqueNamesFile=true

    # Set to true to show your logged-in player and a random mob on the main menu, false to disable. [default: true]
    B:showMainMenuMobs=true

    ##########################################################################################################
    # example_properties
    #--------------------------------------------------------------------------------------------------------#
    # This section contains example properties to demo the config GUI controls.
    ##########################################################################################################

    example_properties {
        # Float prop with bounds.
        D:boundedFloat=100.0

        # Integer prop with bounds.
        I:boundedInteger=100

        # This property selects a color code for chat formatting.
        C:chatColorPicker=c

        # This is a Boolean list that has a fixed length of 6.
        B:fixedBooleanList <
            true
            true
            true
            false
            false
            false
         >

        # This comma-separated String is validated using a Pattern object.
        S:patternString=Only, comma, separated, words, can, be, entered, in, this, box

        # Just a regular String... no requirements.
        S:regularString=This is a regular string, anything goes.

        # If a String[] of valid values is given to a String property, the GUI control is a cycle button.
        S:selectString=This

        # Float prop without bounds.
        D:unboundedFloat=25.0

        # Integer prop without bounds.
        I:unboundedInteger=25

        # This is a String List that is validated using a Pattern object. 27 entries are allowed.
        S:variablePatternStringList <
            minecraft:stone_pickaxe,1,0
            minecraft:stone_shovel,1,0
            minecraft:stone_sword,1,0,{RepairCost:2,display:{Name:"Rapier",},}
            minecraft:stone_axe,1,0
            minecraft:apple,16,0
            minecraft:torch,16,0
            minecraft:enchanted_book,1,0,{StoredEnchantments:[0:{id:3s,lvl:4s,},],}
            minecraft:enchanted_book,1,0,{StoredEnchantments:[0:{id:51s,lvl:1s,},],}
            minecraft:anvil,1,0
         >
    }

}


